package types

// Generated by https://quicktype.io

type FPLSummary struct {
	Phases            []Phase              `json:"phases"`
	Elements          []Element            `json:"elements"`
	Stats             Stats                `json:"stats"`
	GameSettings      GameSettings         `json:"game-settings"`
	CurrentEvent      int64                `json:"current-event"`
	TotalPlayers      int64                `json:"total-players"`
	Teams             []Team               `json:"teams"`
	ElementTypes      []ElementTypeElement `json:"element_types"`
	LastEntryEvent    int64                `json:"last-entry-event"`
	StatsOptions      []StatsOption        `json:"stats_options"`
	NextEventFixtures []NextEventFixture   `json:"next_event_fixtures"`
	Events            []Event              `json:"events"`
	NextEvent         int64                `json:"next-event"`
}

type ElementTypeElement struct {
	ID                int64  `json:"id"`
	SingularName      string `json:"singular_name"`
	SingularNameShort string `json:"singular_name_short"`
	PluralName        string `json:"plural_name"`
	PluralNameShort   string `json:"plural_name_short"`
}

type Element struct {
	ID                       int64   `json:"id"`
	Photo                    string  `json:"photo"`
	WebName                  string  `json:"web_name"`
	TeamCode                 int64   `json:"team_code"`
	Status                   Status  `json:"status"`
	Code                     int64   `json:"code"`
	FirstName                string  `json:"first_name"`
	SecondName               string  `json:"second_name"`
	SquadNumber              *int64  `json:"squad_number"`
	News                     string  `json:"news"`
	NowCost                  int64   `json:"now_cost"`
	NewsAdded                *string `json:"news_added"`
	ChanceOfPlayingThisRound *int64  `json:"chance_of_playing_this_round"`
	ChanceOfPlayingNextRound *int64  `json:"chance_of_playing_next_round"`
	ValueForm                string  `json:"value_form"`
	ValueSeason              string  `json:"value_season"`
	CostChangeStart          int64   `json:"cost_change_start"`
	CostChangeEvent          int64   `json:"cost_change_event"`
	CostChangeStartFall      int64   `json:"cost_change_start_fall"`
	CostChangeEventFall      int64   `json:"cost_change_event_fall"`
	InDreamteam              bool    `json:"in_dreamteam"`
	DreamteamCount           int64   `json:"dreamteam_count"`
	SelectedByPercent        string  `json:"selected_by_percent"`
	Form                     string  `json:"form"`
	TransfersOut             int64   `json:"transfers_out"`
	TransfersIn              int64   `json:"transfers_in"`
	TransfersOutEvent        int64   `json:"transfers_out_event"`
	TransfersInEvent         int64   `json:"transfers_in_event"`
	LoansIn                  int64   `json:"loans_in"`
	LoansOut                 int64   `json:"loans_out"`
	LoanedIn                 int64   `json:"loaned_in"`
	LoanedOut                int64   `json:"loaned_out"`
	TotalPoints              int64   `json:"total_points"`
	EventPoints              int64   `json:"event_points"`
	PointsPerGame            string  `json:"points_per_game"`
	EpThis                   string  `json:"ep_this"`
	EpNext                   string  `json:"ep_next"`
	Special                  bool    `json:"special"`
	Minutes                  int64   `json:"minutes"`
	GoalsScored              int64   `json:"goals_scored"`
	Assists                  int64   `json:"assists"`
	CleanSheets              int64   `json:"clean_sheets"`
	GoalsConceded            int64   `json:"goals_conceded"`
	OwnGoals                 int64   `json:"own_goals"`
	PenaltiesSaved           int64   `json:"penalties_saved"`
	PenaltiesMissed          int64   `json:"penalties_missed"`
	YellowCards              int64   `json:"yellow_cards"`
	RedCards                 int64   `json:"red_cards"`
	Saves                    int64   `json:"saves"`
	Bonus                    int64   `json:"bonus"`
	Bps                      int64   `json:"bps"`
	Influence                string  `json:"influence"`
	Creativity               string  `json:"creativity"`
	Threat                   string  `json:"threat"`
	ICTIndex                 string  `json:"ict_index"`
	EaIndex                  int64   `json:"ea_index"`
	ElementType              int64   `json:"element_type"`
	Team                     int64   `json:"team"`
}

type Event struct {
	ID                     int64  `json:"id"`
	Name                   string `json:"name"`
	DeadlineTime           string `json:"deadline_time"`
	AverageEntryScore      int64  `json:"average_entry_score"`
	Finished               bool   `json:"finished"`
	DataChecked            bool   `json:"data_checked"`
	HighestScoringEntry    *int64 `json:"highest_scoring_entry"`
	DeadlineTimeEpoch      int64  `json:"deadline_time_epoch"`
	DeadlineTimeGameOffset int64  `json:"deadline_time_game_offset"`
	DeadlineTimeFormatted  string `json:"deadline_time_formatted"`
	HighestScore           *int64 `json:"highest_score"`
	IsPrevious             bool   `json:"is_previous"`
	IsCurrent              bool   `json:"is_current"`
	IsNext                 bool   `json:"is_next"`
}

type GameSettings struct {
	Game        Game                        `json:"game"`
	ElementType map[string]ElementTypeValue `json:"element_type"`
}

type ElementTypeValue struct {
	ScoringCleanSheets   int64   `json:"scoring_clean_sheets"`
	SquadMinPlay         int64   `json:"squad_min_play"`
	BpsCleanSheets       int64   `json:"bps_clean_sheets"`
	ScoringGoalsConceded int64   `json:"scoring_goals_conceded"`
	ScoringGoalsScored   int64   `json:"scoring_goals_scored"`
	SquadMaxPlay         int64   `json:"squad_max_play"`
	BpsGoalsScored       int64   `json:"bps_goals_scored"`
	UIShirtSpecific      *bool   `json:"ui_shirt_specific,omitempty"`
	SquadSelect          int64   `json:"squad_select"`
	SubPositionsLocked   []int64 `json:"sub_positions_locked"`
}

type Game struct {
	ScoringEaIndex                   int64                `json:"scoring_ea_index"`
	LeaguePrefixPublic               string               `json:"league_prefix_public"`
	BpsTackles                       int64                `json:"bps_tackles"`
	LeagueH2HTiebreak                string               `json:"league_h2h_tiebreak"`
	ScoringLongPlay                  int64                `json:"scoring_long_play"`
	BpsRecoveriesLimit               int64                `json:"bps_recoveries_limit"`
	FacebookAppID                    string               `json:"facebook_app_id"`
	BpsTackled                       int64                `json:"bps_tackled"`
	BpsErrorsLeadingToGoal           int64                `json:"bps_errors_leading_to_goal"`
	BpsYellowCards                   int64                `json:"bps_yellow_cards"`
	UIElHideCurrencyQi               bool                 `json:"ui_el_hide_currency_qi"`
	ScoringBonus                     int64                `json:"scoring_bonus"`
	TransfersCost                    int64                `json:"transfers_cost"`
	DefaultFormation                 [][]int64            `json:"default_formation"`
	BpsLongPlay                      int64                `json:"bps_long_play"`
	BpsLongPlayLimit                 int64                `json:"bps_long_play_limit"`
	ScoringAssists                   int64                `json:"scoring_assists"`
	ScoringLongPlayLimit             int64                `json:"scoring_long_play_limit"`
	FifaLeagueID                     int64                `json:"fifa_league_id"`
	LeagueSizeClassicMax             int64                `json:"league_size_classic_max"`
	ScoringRedCards                  int64                `json:"scoring_red_cards"`
	ScoringCreativity                int64                `json:"scoring_creativity"`
	GameTimezone                     string               `json:"game_timezone"`
	StaticGameURL                    string               `json:"static_game_url"`
	CurrencySymbol                   string               `json:"currency_symbol"`
	BpsTargetMissed                  int64                `json:"bps_target_missed"`
	BpsPenaltiesSaved                int64                `json:"bps_penalties_saved"`
	SupportEmailAddress              string               `json:"support_email_address"`
	CupStartEventID                  int64                `json:"cup_start_event_id"`
	ScoringPenaltiesSaved            int64                `json:"scoring_penalties_saved"`
	ScoringThreat                    int64                `json:"scoring_threat"`
	ScoringSaves                     int64                `json:"scoring_saves"`
	LeagueJoinPrivateMax             int64                `json:"league_join_private_max"`
	ScoringShortPlay                 int64                `json:"scoring_short_play"`
	SysUseEventLiveAPI               bool                 `json:"sys_use_event_live_api"`
	ScoringConcedeLimit              int64                `json:"scoring_concede_limit"`
	BpsKeyPasses                     int64                `json:"bps_key_passes"`
	BpsClearancesBlocksInterceptions int64                `json:"bps_clearances_blocks_interceptions"`
	BpsPassPercentage90              int64                `json:"bps_pass_percentage_90"`
	BpsBigChancesMissed              int64                `json:"bps_big_chances_missed"`
	LeagueMaxKoRoundsH2H             int64                `json:"league_max_ko_rounds_h2h"`
	BpsOpenPlayCrosses               int64                `json:"bps_open_play_crosses"`
	LeaguePointsH2HWin               int64                `json:"league_points_h2h_win"`
	BpsSaves                         int64                `json:"bps_saves"`
	BpsCbiLimit                      int64                `json:"bps_cbi_limit"`
	LeagueSizeH2HMax                 int64                `json:"league_size_h2h_max"`
	SysViceCaptainEnabled            bool                 `json:"sys_vice_captain_enabled"`
	SquadSquadplay                   int64                `json:"squad_squadplay"`
	BpsFouls                         int64                `json:"bps_fouls"`
	SquadSquadsize                   int64                `json:"squad_squadsize"`
	UISelectionShortTeamNames        bool                 `json:"ui_selection_short_team_names"`
	TransfersSellOnFee               float64              `json:"transfers_sell_on_fee"`
	TransfersType                    string               `json:"transfers_type"`
	ScoringICTIndex                  int64                `json:"scoring_ict_index"`
	BpsPassPercentage80              int64                `json:"bps_pass_percentage_80"`
	BpsOwnGoals                      int64                `json:"bps_own_goals"`
	ScoringYellowCards               int64                `json:"scoring_yellow_cards"`
	BpsPassPercentage70              int64                `json:"bps_pass_percentage_70"`
	UIShowHomeAway                   bool                 `json:"ui_show_home_away"`
	UIElHideCurrencySy               bool                 `json:"ui_el_hide_currency_sy"`
	BpsAssists                       int64                `json:"bps_assists"`
	SquadTeamLimit                   int64                `json:"squad_team_limit"`
	LeaguePointsH2HDraw              int64                `json:"league_points_h2h_draw"`
	TransfersLimit                   int64                `json:"transfers_limit"`
	BpsDribbles                      int64                `json:"bps_dribbles"`
	BpsOffside                       int64                `json:"bps_offside"`
	SysCDNCacheEnabled               bool                 `json:"sys_cdn_cache_enabled"`
	CurrencyMultiplier               int64                `json:"currency_multiplier"`
	BpsRedCards                      int64                `json:"bps_red_cards"`
	BpsWinningGoals                  int64                `json:"bps_winning_goals"`
	LeagueJoinPublicMax              int64                `json:"league_join_public_max"`
	Formations                       map[string][][]int64 `json:"formations"`
	LeaguePointsH2HLose              int64                `json:"league_points_h2h_lose"`
	CurrencyDecimalPlaces            int64                `json:"currency_decimal_places"`
	BpsErrorsLeadingToGoalAttempt    int64                `json:"bps_errors_leading_to_goal_attempt"`
	UISelectionPriceGap              int64                `json:"ui_selection_price_gap"`
	BpsBigChancesCreated             int64                `json:"bps_big_chances_created"`
	UISelectionPlayerLimit           int64                `json:"ui_selection_player_limit"`
	BpsAttemptedPassesLimit          int64                `json:"bps_attempted_passes_limit"`
	ScoringPenaltiesMissed           int64                `json:"scoring_penalties_missed"`
	PhotoBaseURL                     string               `json:"photo_base_url"`
	ScoringBps                       int64                `json:"scoring_bps"`
	ScoringInfluence                 int64                `json:"scoring_influence"`
	BpsPenaltiesConceded             int64                `json:"bps_penalties_conceded"`
	ScoringOwnGoals                  int64                `json:"scoring_own_goals"`
	SquadTotalSpend                  int64                `json:"squad_total_spend"`
	BpsShortPlay                     int64                `json:"bps_short_play"`
	UIElementWrap                    int64                `json:"ui_element_wrap"`
	BpsRecoveries                    int64                `json:"bps_recoveries"`
	BpsPenaltiesMissed               int64                `json:"bps_penalties_missed"`
	ScoringSavesLimit                int64                `json:"scoring_saves_limit"`
}

type NextEventFixture struct {
	ID                    int64                 `json:"id"`
	KickoffTimeFormatted  string                `json:"kickoff_time_formatted"`
	Started               bool                  `json:"started"`
	EventDay              int64                 `json:"event_day"`
	DeadlineTime          string                `json:"deadline_time"`
	DeadlineTimeFormatted DeadlineTimeFormatted `json:"deadline_time_formatted"`
	Stats                 []interface{}         `json:"stats"`
	Code                  int64                 `json:"code"`
	KickoffTime           string                `json:"kickoff_time"`
	TeamHScore            interface{}           `json:"team_h_score"`
	TeamAScore            interface{}           `json:"team_a_score"`
	Finished              bool                  `json:"finished"`
	Minutes               int64                 `json:"minutes"`
	ProvisionalStartTime  bool                  `json:"provisional_start_time"`
	FinishedProvisional   bool                  `json:"finished_provisional"`
	Event                 int64                 `json:"event"`
	TeamA                 int64                 `json:"team_a"`
	TeamH                 int64                 `json:"team_h"`
}

type Phase struct {
	ID         int64  `json:"id"`
	Name       string `json:"name"`
	NumWinners int64  `json:"num_winners"`
	StartEvent int64  `json:"start_event"`
	StopEvent  int64  `json:"stop_event"`
}

type Stats struct {
	Headings   []Heading   `json:"headings"`
	Categories interface{} `json:"categories"`
}

type Heading struct {
	Category interface{} `json:"category"`
	Field    string      `json:"field"`
	Abbr     interface{} `json:"abbr"`
	Label    string      `json:"label"`
}

type StatsOption struct {
	Name string `json:"name"`
	Key  string `json:"key"`
}

type Team struct {
	ID                  int64           `json:"id"`
	CurrentEventFixture []TEventFixture `json:"current_event_fixture"`
	NextEventFixture    []TEventFixture `json:"next_event_fixture"`
	Name                string          `json:"name"`
	Code                int64           `json:"code"`
	ShortName           string          `json:"short_name"`
	Unavailable         bool            `json:"unavailable"`
	Strength            int64           `json:"strength"`
	Position            int64           `json:"position"`
	Played              int64           `json:"played"`
	Win                 int64           `json:"win"`
	Loss                int64           `json:"loss"`
	Draw                int64           `json:"draw"`
	Points              int64           `json:"points"`
	Form                interface{}     `json:"form"`
	LinkURL             string          `json:"link_url"`
	StrengthOverallHome int64           `json:"strength_overall_home"`
	StrengthOverallAway int64           `json:"strength_overall_away"`
	StrengthAttackHome  int64           `json:"strength_attack_home"`
	StrengthAttackAway  int64           `json:"strength_attack_away"`
	StrengthDefenceHome int64           `json:"strength_defence_home"`
	StrengthDefenceAway int64           `json:"strength_defence_away"`
	TeamDivision        int64           `json:"team_division"`
}

type TEventFixture struct {
	IsHome   bool  `json:"is_home"`
	Day      int64 `json:"day"`
	EventDay int64 `json:"event_day"`
	Month    int64 `json:"month"`
	ID       int64 `json:"id"`
	Opponent int64 `json:"opponent"`
}

type Status string

const (
	A Status = "a"
	D Status = "d"
	I Status = "i"
	N Status = "n"
	S Status = "s"
	U Status = "u"
)

type DeadlineTimeFormatted string

const (
	The29Sep1130 DeadlineTimeFormatted = "29 Sep 11:30"
)
